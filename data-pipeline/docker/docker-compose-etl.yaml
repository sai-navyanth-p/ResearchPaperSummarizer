version: '3.8'

volumes:
  arxivdata:

services:
  extract-data:
    container_name: etl_extract_data
    image: python:3.11
    user: root
    volumes:
      - arxivdata:/data
    working_dir: /data
    command:
      - bash
      - -c
      - |
        set -e
        echo "Downloading arXiv dataset zip from Kaggle..."
        curl -L -o arxiv.zip "https://www.kaggle.com/api/v1/datasets/download/sumitm004/arxiv-scientific-research-papers-dataset"
        echo "Unzipping..."
        unzip -o arxiv.zip
        rm arxiv.zip
        echo "Listing contents of /data after extract stage:"
        ls -lh /data

  download-pdfs:
    container_name: etl_download_pdfs
    image: python:3.11
    user: root
    volumes:
      - arxivdata:/data
      - ../scripts:/scripts:ro
    working_dir: /data
    command:
      - bash
      - -c
      - |
        set -e
        pip install --no-cache-dir pandas requests tqdm
        echo "Downloading PDFs from arXiv using CSV..."
        python3 /scripts/download_arxiv_pdfs.py --csv "arXiv_scientific dataset.csv" --outdir pdfs
        echo "Listing contents of /data/pdfs after PDF download:"
        ls -lh /data/pdfs

  extract-text:
    container_name: etl_extract_text
    image: python:3.11
    user: root
    volumes:
      - arxivdata:/data
      - ../scripts:/scripts:ro
    working_dir: /data
    command:
      - bash
      - -c
      - |
        set -e
        pip install --no-cache-dir pymupdf tqdm nltk
        python3 -m nltk.downloader punkt
        echo "Extracting and preprocessing text from PDFs..."
        python3 /scripts/extract_pdf_text_json.py --pdfdir pdfs --outfile cleandata/textdata.json
        echo "Listing contents of /data/cleandata after text extraction:"
        ls -lh /data/cleandata

  load-data:
    container_name: etl_load_data
    image: rclone/rclone:latest
    volumes:
      - arxivdata:/data
      - ~/.config/rclone/rclone.conf:/root/.config/rclone/rclone.conf:ro
    entrypoint: /bin/sh
    command:
      - -c
      - |
        if [ -z "$RCLONE_CONTAINER" ]; then
          echo "ERROR: RCLONE_CONTAINER is not set"
          exit 1
        fi
        echo "Uploading cleandata directory to object store..."
        rclone copy /data/cleandata chi_uc:$RCLONE_CONTAINER/cleandata --progress
        echo "Listing directories in container after load stage:"
        rclone lsd chi_uc:$RCLONE_CONTAINER